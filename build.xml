<?xml version="1.0" encoding="UTF-8"?>
<!-- ===========================================================================
# Nexus Common Library Phing Build Script
# $Id$
#
# Description:
#   For use by phing
# Meta Tags:
# @package nxsys/library.ncl
# @subpackage Meta
# @author Chris R. Feamster <os@nexussystemsinc.com>
# @author $LastChangedBy$
#
# @version $Revision$
# @copyright (c) 2019 Nexus Systems, Inc. Some rights reserved.
#
============================================================================ -->
<project name="nxsys/library.ncl" default="build">
	<taskdef name="sonar" classname="phing.tasks.ext.sonar.SonarTask" />
	<property file="build.properties" />
	<if>
		<not>
			<or>
				<available file="box.json" />
				<available file="masthead.txt" />
				<available file="PharMain.php" />
				<available file="build.properties" />
			</or>
		</not>
		<then>
			<fail message="One of build.properties, box.json, PharMain.php or masthead.txt is missing!"/>
		</then>
	</if>
	<tstamp />
	<tstamp>
		<format property="YEAR" pattern="%Y"/>
	</tstamp>
	<!-- removed "generate" target for pre constructed prj  -->

	<!-- ============================================  -->
	<!-- Target: prepare                               -->
	<!-- ============================================  -->
	<target name="prepare">
		<!--Needs "sed"-->
		<!-- <exec command='svn info | sed -n "/URL:/s/.*\///p"'
			  outputProperty='svnParentDir'/> -->
		<reflexive>
			<fileset dir="."
				includes="box.json
						  masthead.txt"/>
			<filterchain>
				<replacetokens begintoken="##" endtoken="##">
					<token key="prj.identkey" value="${prj.identkey}" />
					<token key="prj.name" value="${prj.name}" />
					<token key="prj.ver" value="##${prj.ver}##" />
					<token key="year" value="${YEAR}" />
				</replacetokens>
			</filterchain>
		</reflexive>
		<mkdir dir="vendor" />
		<mkdir dir="build" />
		<mkdir dir="res" />
		<mkdir dir="tests" />
	</target>

    <!-- ============================================  -->
    <!-- Target: tests                                 -->
    <!-- ============================================  -->
    <target name="tests">
		<exec executable="codecept" passthru="true">
			<arg line="run --coverage --coverage-xml --coverage-html --html --xml --tap"/>
		</exec>
		<sonar 	executable="sonar-scanner"
				errors="true"
				configuration="./sonar-project.properties" >
			<!-- Assume that mandatory SonarQube parameters are defined in configuration file! -->
			<property name="sonar.host.url" value="https://sonarcloud.io" />
			<property name="sonar.login" 	value="${env.SONAR_KEY}" />

			<property name="sonar.projectBaseDir" value="${env.APPVEYOR_BUILD_FOLDER}" />
			<property name="sonar.buildString" value="${env.APPVEYOR_BUILD_ID}" />
			<property name="sonar.projectVersion" value="${prj.ver}" />
			<!-- <property name="sonar.log.level" value="DEBUG" /> -->
		</sonar>
		<exec executable="powershell" passthru="true">
			<arg line="(New-Object \'System.Net.WebClient\').UploadFile(\'https://ci.appveyor.com/api/testresults/junit/\' + \'$(env.APPVEYOR_JOB_ID)\', (Resolve-Path \'.\tests\_output\report.xml\'))"/>
		</exec>
	</target>

	<!-- ============================================  -->
	<!-- Target: (DEFAULT) build                       -->
	<!-- ============================================  -->
	<target name="build" depends="prepare, tests">
		<echo msg="Building Phar..." />
		<mkdir dir="build" />
		<echo file="index.php" append="false">Phar is a library package and is not executiable.\n\trequire_once 'phar://&lt;PHAR FILE&gt;/vendor/autoload.php';</echo>
		<exec executable="php" passthru="true">
			<arg line="-f box.phar -- compile -v"/>
		</exec>
		<move file="index.phar" tofile="${prj.identkey}.phar" />
		<copy file="${prj.identkey}.phar" todir="build" />
	</target>

	<!-- ============================================  -->
	<!-- Target: build-docs                            -->
	<!-- ============================================  -->
	<target name="build-docs" depends="prepare">
		<echo msg="Creating Docs\API ..." />
		<apigen source="src,vendor" destination="build/docs/api"
				title="${prj.name} (trunk) API Docs"
				nosourcecode="" exclude="*/tests/*,*/Tests/*,*/Self-Test/*"
				debug="" tree=""/>
		<!-- @todo gen sphinx docs if applicable -->
	</target>

	<!-- ============================================  -->
	<!-- Target: prepare-dist                          -->
	<!-- ============================================  -->
	<target name="prepare-dist" depends="build-docs, build">
		<!-- Remember that on run, this task will +1 w/e this file says! -->
		<version releasetype="Bugfix" file="version.txt" property="prj.ver"/>
	</target>

	<!-- ============================================  -->
	<!-- Target: dist-phar (Phar Only)                 -->
	<!-- ============================================  -->
	<target name="dist-phar" depends="prepare-dist">
		<echo msg="Creating archive..." />
		<zip destfile="./build/${prj.identkey}-phar_${prj.buildId}.zip">
			<fileset dir=".">
				<include name="${prj.identkey}.phar" />
				<include name="${prj.identkey}.phar.pubkey" />
			</fileset>
		</zip>
		<echo msg="Files copied and compressed in build directory OK!" />
	</target>
	<!-- ============================================  -->
	<!-- Target: dist-full (FULL dir structure)        -->
	<!-- ============================================  -->
	<target name="dist-full" depends="prepare-dist">
		<echo msg="Creating archive..." />
		<zip destfile="./build/${prj.identkey}-${prj.buildId}_full.zip">
			<fileset dir=".">
				<include name="${prj.identkey}.phar" />
				<include name="${prj.identkey}.conf" />
				<include name="libs/" />
				<include name="etc/" />
				<include name="docs/" />
			</fileset>
		</zip>
		<echo msg="Files copied and compressed in build directory OK!" />
	</target>
</project>
